FROM arm64v8/ubuntu:20.04 as arm64

ENV PIP_EXTRA_INDEX_URL=https://snapshots.linaro.org/ldcg/python-cache/
RUN apt update -yqq && apt install -yqq python3 python3-pip wget libmp3lame-dev git

# Install GRPCIO
WORKDIR /app
RUN python3 -m pip install --upgrade pip
RUN wget https://snapshots.linaro.org/ldcg/python-cache/grpcio/grpcio-1.41.1-cp38-cp38-manylinux_2_17_aarch64.whl
RUN mv grpcio-1.41.1-cp38-cp38-manylinux_2_17_aarch64.whl grpcio-1.41.1-cp38-none-any.whl
RUN pip install grpcio-1.41.1-cp38-none-any.whl

# Install tensorflow text
WORKDIR /app
RUN git clone https://github.com/tensorflow/text.git
WORKDIR /app/text
RUN git fetch --all --tags --prune
RUN git checkout tags/v2.6.0
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get install -yqq npm
ENV USE_BAZEL_VERSION=4.x
RUN npm install -g @bazel/bazelisk
RUN ln -s /usr/bin/python3 /usr/bin/python
RUN pip install tensorflow-io==0.20.0
COPY ./scripts/patch-tensorflow-text-for-arm.patch /app/text
RUN git apply patch-tensorflow-text-for-arm.patch
RUN ./oss_scripts/run_build.sh
RUN pip install tensorflow_text-2.6.0-cp38-cp38-linux_aarch64.whl

# Install tensorflow asr
WORKDIR /app
RUN git clone https://github.com/TensorSpeech/TensorFlowASR.git
WORKDIR /app/TensorFlowASR
RUN pip install -e ".[tf2.6.2]"
RUN mv tensorflow_asr ..

WORKDIR /app
COPY ./requirements.txt /app/requirements.txt
RUN pip --no-cache-dir install -r requirements.txt
RUN pip install --force-reinstall h5py
RUN apt-get install -yqq llvm
RUN pip install numba==0.53
RUN apt-get install -yqq libsndfile1-dev
RUN pip install sndfile

COPY . /app

RUN chmod a+x /app/scripts/run.sh
ENTRYPOINT ["/app/scripts/run.sh"]

